generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model user {
  id              Int           @id(map: "User_pkey") @default(autoincrement())
  email           String        @unique(map: "User_email_key")
  password        String
  monthly_income  Float?
  monthly_payment Float?
  monthly_loan    Float?
  debt_free_date  DateTime?
  strategy        StrategyType?
  username        String
  user_type       UserType      @default(DEBTOR)
  extra_payment   Float?
  appointment     appointment[]
  bills           bill[]
  budgets         budget[]
  loans           loan[]
  Transaction     transaction[]
}

model loan {
  id                Int           @id(map: "Loan_pkey") @default(autoincrement())
  name              String
  end_date          DateTime
  loan_amount       Float
  installment_month Int
  payment_remaining Int
  interest_rate     Float
  loan_status       PaymentStatus @default(UNPAID)
  userId            Int
  repayment_date    DateTime
  user              user          @relation(fields: [userId], references: [id], map: "Loan_userId_fkey")
}

model bill {
  id               Int           @id(map: "Bill_pkey") @default(autoincrement())
  name             String
  amount           Float
  repeating_option RepeatOption
  bill_status      PaymentStatus @default(UNPAID)
  userId           Int
  repayment_date   DateTime
  user             user          @relation(fields: [userId], references: [id], map: "Bill_userId_fkey")
}

model budget {
  id       Int                 @id(map: "Budget_pkey") @default(autoincrement())
  name     String
  amount   Float
  category TransactionCategory
  account  AccountType
  userId   Int
  user     user                @relation(fields: [userId], references: [id], map: "Budget_userId_fkey")
}

model consultant {
  id          Int           @id(map: "Consultant_pkey") @default(autoincrement())
  name        String
  description String
  about       String
  rating      Float
  designation String
  appointment appointment[]
}

model appointment {
  id           Int        @id(map: "Appointment_pkey") @default(autoincrement())
  time         DateTime
  consultantId Int
  userId       Int
  consultant   consultant @relation(fields: [consultantId], references: [id], map: "Appointment_consultantId_fkey")
  user         user       @relation(fields: [userId], references: [id], map: "Appointment_userId_fkey")
}

model transaction {
  id          Int                 @id(map: "Transaction_pkey") @default(autoincrement())
  date        DateTime
  account     AccountType
  category    TransactionCategory
  description String?
  amount      Float
  type        TransactionType
  userId      Int
  user        user                @relation(fields: [userId], references: [id], map: "Transaction_userId_fkey")
}

enum TransactionType {
  INCOME
  EXPENSE
}

enum TransactionCategory {
  SHOPPING
  HOUSING
  TRANSPORTATION
  EDUCATION
  HEALTH
  ENTERTAINMENT
  FOOD
  SALARY
  SCHOLARSHIP
  GIFTS
  OTHER
}

enum AccountType {
  CASH
  CREDIT_CARD
  DEBIT_CARD
  E_WALLET
}

enum RepeatOption {
  DAILY
  MONTHLY
  YEARLY
}

enum StrategyType {
  AVALANCHE
  SNOWBALL
}

enum UserType {
  DEBTOR
  CONSULTANT
}

enum PaymentStatus {
  PAID
  UNPAID
}
